# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  #push:
   # branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
      

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
        #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn clean verify -Dsonar.projectKey=local.test.sonar
      
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_PROJECT_KEY: local.test.sonar
        sonar.projectKey: local.test.sonar
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_JAVA_BINARIES: '**/target/classes'
        sonar.java.binaries: '**/target/classes'
        SONAR_SOURCES: src
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
       SONAR_PROJECT_KEY: local.test.sonar
       sonar.projectKey: local.test.sonar
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
       SONAR_JAVA_BINARIES: '**/target/classes'
       sonar.java.binaries: '**/target/classes'
       SONAR_SOURCES: src
